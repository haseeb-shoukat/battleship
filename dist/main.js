(()=>{"use strict";class e{constructor(e="player"){this.myBoard=function(){let e=[];for(let t=0;t<10;t++)for(let i=0;i<10;i++)e.push([t,i]);return{ships:[],missed:[],legalMoves:e,placeShip:function(e){this.ships.push(function(e,t){return{id:e,coords:t,hit:[],processHit:function(e){this.hit.push(e)},isSunk:function(){return this.hit.length===this.coords.length},contains:function(e,t){let i=!1;return this[t].forEach((t=>{t[0]!==e[0]||t[1]!==e[1]||(i=!0)})),i}}}(this.ships.length,e))},receiveAttack:function(e,t){let i=!1;return this.ships.every((s=>!s.contains([e,t],"coords")||(s.processHit([e,t]),i=!0,!1))),!1===i&&this.missed.push([e,t]),this.updateLegal(e,t),i},allSunk:function(){return this.ships.every((e=>!1!==e.isSunk()))},updateLegal:function(e,t){let i=this.legalMoves.filter((i=>JSON.stringify(i)!==JSON.stringify([e,t])));this.legalMoves=i},isIllegal:function(e,t){return this.legalMoves.every((i=>JSON.stringify(i)!==JSON.stringify([e,t])))}}}(),this.enemy,this.id=e}setEnemy(e){this.enemy=e}attack(e,t){this.enemy.receive(e,t)}compAttack(){if("comp"!==this.id)return;let e=this.enemy.myBoard.legalMoves,[t,i]=e[Math.floor(Math.random()*e.length)];this.enemy.receive(t,i)}receive(e,t){if(this.myBoard.isIllegal(e,t))return"Illegal Move";this.myBoard.receiveAttack(e,t)}}(function(){const t=document.querySelector(".board-one"),i=document.querySelector(".board-two"),s=new e,n=new e("comp");return{initialize:function(){s.setEnemy(n),n.setEnemy(s);for(let e=0;e<100;e++){const e=document.createElement("div");e.classList.add("board-item"),t.appendChild(e),i.appendChild(e.cloneNode())}}}})().initialize()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,