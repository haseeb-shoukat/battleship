(()=>{"use strict";const e=function(e){return{info:e,coords:e.coords,hit:[],processHit:function(e){this.hit.push(e)},isSunk:function(){return this.hit.length===this.coords.length},contains:function(e,t){return this[t].some((t=>JSON.stringify(t)===JSON.stringify(e)))}}};class t{constructor(t="player"){this.myBoard=function(){let t=[],o=[];for(let e=0;e<10;e++)for(let n=0;n<10;n++)t.push([e,n]),o.push([e,n]);return{ships:[],missed:[],types:[{type:"Carrier",len:5},{type:"Battleship",len:4},{type:"Destroyer",len:3},{type:"Submarine",len:3},{type:"Patrol Boat",len:2}],legalPlacements:o,legalMoves:t,automaticShips:function(){this.types.forEach((t=>{const o=["x","y"][Math.floor(2*Math.random())];let n=[];for(;!this.canPlaceShip(n);){n=[];let[e,r]=this.legalPlacements[Math.floor(Math.random()*this.legalPlacements.length)];if("x"===o)for(let o=r;o<r+t.len;o++)n.push([e,o]);else for(let o=e;o<e+t.len;o++)n.push([o,r])}let r={coords:n,axis:o};this.ships.push(e(r)),this.updateLegalPlacements(r)}))},placeShip:function(t){this.ships.push(e(t)),this.updateLegalPlacements(t)},canPlaceShip:function(e){return!(e.length<2)&&e.every((e=>this.legalPlacements.some((t=>JSON.stringify(e)===JSON.stringify(t)))))},updateLegalPlacements:function(e){let t=JSON.parse(JSON.stringify(e.coords)),[o,n]=e.coords[0],[r,a]=e.coords[e.coords.length-1];"y"===e.axis?(t.push([o-1,n],[r+1,a]),t.forEach((([e,o])=>{t.push([e,o-1],[e,o+1])})),e.coords.forEach((([e,o])=>{t.push([e,o-1],[e,o+1])}))):(t.push([o,n-1],[r,a+1]),t.forEach((([e,o])=>{t.push([e-1,o],[e+1,o])})),e.coords.forEach((([e,o])=>{t.push([e-1,o],[e+1,o])})));let i=this.legalPlacements.filter((e=>t.every((t=>JSON.stringify(e)!==JSON.stringify(t)))));this.legalPlacements=i},receiveAttack:function(e,t){let o=!1;return this.ships.every((n=>!n.contains([e,t],"coords")||(n.processHit([e,t]),o=!0,!1))),!1===o&&this.missed.push([e,t]),this.updateLegal(e,t),o},allSunk:function(){return this.ships.every((e=>e.isSunk()))},updateLegal:function(e,t){let o=this.legalMoves.filter((o=>JSON.stringify(o)!==JSON.stringify([e,t])));this.legalMoves=o},isIllegal:function(e,t){return this.legalMoves.every((o=>JSON.stringify(o)!==JSON.stringify([e,t])))}}}(),this.enemy,this.id=t,this.currentTurn=!1}setEnemy(e){this.enemy=e}setCurrent(e){this.currentTurn=e}attack(e,t){return this.enemy.receive(e,t)}compShips(){"comp"===this.id&&this.myBoard.automaticShips()}compAttack(){if("comp"!==this.id)return;let e=this.enemy.myBoard.legalMoves,[t,o]=e[Math.floor(Math.random()*e.length)];return this.enemy.receive(t,o)}receive(e,t){if(this.myBoard.isIllegal(e,t))return"Illegal Move";!0!==this.myBoard.receiveAttack(e,t)&&(this.currentTurn=!0,this.enemy.setCurrent(!1))}}const o=function(){document.body.innerHTML='<div class="main-title">Battleship</div>\n  <div class="board">\n      <div class="board-one"></div>\n  </div>\n  <div class="board">\n      <div class="board-two"></div>\n  </div>\n  <div class="overlay">\n      <div class="card">\n          <div class="card-heading">Welcome to Battleship!</div>\n          <div class="card-text"></div>\n          <button class="rotate-btn">Rotate</button>\n          <div class="placing-board"></div>\n      </div>\n  </div>';const e=document.querySelector(".board-one"),t=document.querySelector(".board-two"),o=document.querySelector(".placing-board"),r=document.querySelector(".rotate-btn");let a=[],i="x";r.addEventListener("click",(e=>{i="y"===i?"x":"y"}));for(let o=0;o<10;o++)for(let n=0;n<10;n++){const r=document.createElement("div");r.classList.add("board-item"),r.dataset.coord=[n,o].join(""),e.appendChild(r),t.appendChild(r.cloneNode())}const s=function(e,t){!function(e){o.innerHTML="";for(let e=0;e<10;e++)for(let t=0;t<10;t++){const n=document.createElement("div");n.classList.add("board-item","invalid-placement"),n.dataset.coord=[t,e].join(""),o.appendChild(n)}e.myBoard.legalPlacements.forEach((([e,t])=>{document.querySelector(`.placing-board > [data-coord="${e}${t}"`).classList.remove("invalid-placement")})),e.myBoard.ships.forEach((e=>{e.coords.forEach((([e,t])=>{const o=document.querySelector(`.placing-board > [data-coord="${e}${t}"`);o.classList.remove("invalid-placement"),o.classList.add("ship")}))}))}(e);const n=document.querySelectorAll(".placing-board > .board-item"),r=document.querySelector(".card-text"),a=e.myBoard.types[t];r.textContent=`Place your ${a.type}`,n.forEach((o=>{o.addEventListener("mouseover",c.bind(null,o,a,e)),o.addEventListener("mouseout",l),o.addEventListener("click",d.bind(null,e,a,t))}))},c=function(e,t,o){const[n,r]=e.dataset.coord.split("").map(Number);let s=[];if("y"===i)for(let e=n;e<n+t.len;e++)s.push([e,r]);else for(let e=r;e<r+t.len;e++)s.push([n,e]);if(o.myBoard.canPlaceShip(s))s.forEach((([e,t])=>{document.querySelector(`.placing-board > [data-coord="${[e,t].join("")}"]`).classList.add("hover")})),a=s;else{let[e,t]=s[0];document.querySelector(`.placing-board > [data-coord="${[e,t].join("")}"]`).classList.add("invalid-hover"),a=[]}},l=function(e){document.querySelectorAll(".hover").forEach((e=>e.classList.remove("hover"))),document.querySelectorAll(".invalid-hover").forEach((e=>e.classList.remove("invalid-hover")))},d=function(e,t,o){e.myBoard.canPlaceShip(a)&&(e.myBoard.placeShip({coords:a,axis:i}),"Patrol Boat"===t.type?(document.querySelector(".overlay").remove(),n.gameLoop()):s(e,o+1))},u=function(e){let t;"player"===e.id?(t="one",e.myBoard.ships.forEach((e=>{e.coords.forEach((e=>{document.querySelector(`.board-${t} > [data-coord="${e.join("")}"]`).classList.add("ship")}))}))):t="two",e.myBoard.missed.forEach((e=>{document.querySelector(`.board-${t} > [data-coord="${e.join("")}"]`).classList.add("missed")})),e.myBoard.ships.forEach((e=>{e.hit.forEach((e=>{document.querySelector(`.board-${t} > [data-coord="${e.join("")}"]`).classList.add("hit")}))}))};return{render:function(e,t){u(e),u(t)},renderPlacingBoard:function(e){s(e,0)},endGame:function(e){const t=document.createElement("div");t.classList.add("overlay"),t.innerHTML=`\n    <div class="overlay">\n        <div class="end-card">\n            <div class="card-heading">${e}</div>\n            <button class="restart-btn">Play Again</button>\n        </div>\n    </div>`,document.body.appendChild(t)}}}(),n=function(){let e,n;const r=function(){o.render(e,n),!0!==e.currentTurn?a():n.myBoard.legalMoves.forEach((e=>{document.querySelector(`.board-two > [data-coord="${e.join("")}"]`).addEventListener("click",a)}))},a=function(t="null"){if(!0===e.currentTurn){let[o,n]=t.target.dataset.coord.split("").map(Number);e.attack(o,n)}else n.compAttack();let a=i();a?o.endGame(a):r()},i=function(){let t;return t=e.myBoard.allSunk()?"Computer Wins! Better luck next time.":!!n.myBoard.allSunk()&&"Congratulations! You win.",t};return{initialize:function(){e=new t,n=new t("comp"),e.setEnemy(n),n.setEnemy(e),e.setCurrent(!0),n.compShips(),o.renderPlacingBoard(e)},gameLoop:r}}();n.initialize()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,